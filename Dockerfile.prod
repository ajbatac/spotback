# Production Dockerfile (Multi-stage build)

# ---- Builder Stage ----
# This stage installs all dependencies and builds the Next.js app
FROM node:20-slim AS builder

WORKDIR /app

# Install dependencies
COPY package*.json ./
RUN npm install

# Copy the rest of the application source code
COPY . .

# Set build-time arguments for environment variables
# These are needed during the build process
ARG NEXT_PUBLIC_SPOTIFY_CLIENT_ID
ARG SPOTIFY_CLIENT_SECRET
ARG NEXT_PUBLIC_APP_URL

ENV NEXT_PUBLIC_SPOTIFY_CLIENT_ID=${NEXT_PUBLIC_SPOTIFY_CLIENT_ID}
ENV SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
ENV NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}

# Build the Next.js application
RUN npm run build

# ---- Runner Stage ----
# This stage creates the final, small production image
FROM node:20-slim AS runner

WORKDIR /app

# Set the environment to production
ENV NODE_ENV=production

# Copy built assets from the builder stage
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/next.config.ts ./next.config.ts
COPY --from=builder /app/package.json ./package.json

# Install only production dependencies
RUN npm install --omit=dev

# Expose the port the app runs on
EXPOSE 9002

# The command to start the production server
CMD ["npm", "start", "-p", "9002"]
